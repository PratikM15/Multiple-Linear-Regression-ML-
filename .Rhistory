dataset=read.csv('Data.csv')
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Salary)
#
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
#Encoding Categorical Data
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
View(dataset)
View(dataset)
View(dataset)
#Data Preprocessing
#Importing Dataset
dataset=read.csv('Data.csv')
#Missing Data
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Salary)
#Encoding Categorical Data
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
#Feature Scaling
#Data Preprocessing
#Importing Dataset
dataset=read.csv('Data.csv')
#Missing Data
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Salary)
#Encoding Categorical Data
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
#Splitting Dataset into training set and test set
library(caTools)
set.seed(123)
split=sample.split(dataset$Purchased,splitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Feature Scaling
#Data Preprocessing
#Importing Dataset
dataset=read.csv('Data.csv')
#Missing Data
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Salary)
#Encoding Categorical Data
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
#Splitting Dataset into training set and test set
library(caTools)
set.seed(123)
split=Sample.split(dataset$Purchased,splitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Data Preprocessing
#Importing Dataset
dataset=read.csv('Data.csv')
#Missing Data
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Salary)
#Encoding Categorical Data
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
#Splitting Dataset into training set and test set
library(caTools)
set.seed(123)
split=Sample.split(dataset$Purchased,splitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
install.packages(caTools)
install.packages('caTools')
install.packages('caTools')
#Data Preprocessing
#Importing Dataset
dataset=read.csv('Data.csv')
#Missing Data
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x) mean(x,na.rm=TRUE)),dataset$Salary)
#Encoding Categorical Data
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),labels=c(0,1))
#Splitting Dataset into training set and test set
#install.packages('caTools')
library(caTools)
set.seed(123)
split=Sample.split(dataset$Purchased,splitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Feature Scaling
View(dataset)
View(dataset)
library(caTools)
set.seed(123)
split=Sample.split(dataset$Purchased,splitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#install.packages('caTools')
library(caTools)
set.seed(123)
split=sample.split(dataset$Purchased,splitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#install.packages('caTools')
library(caTools)
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
View(training_set)
View(test_set)
#Feature Scaling
training_set[,2:3]=scale(training_set[,2:3])
test_set[,2:3]=scale(test_set[,2:3])
setwd("C:/Users/HP/Desktop/ML Udemy/Machine Learning A-Z Practice/Part 2 - Regression/Section 6 - Polynomial Regression")
#Polynomial Regression
dataset=read.csv('Position_Salaries.csv')
dataset=dataset[2,3]
View(test_set)
View(test_set)
#Polynomial Regression
dataset=read.csv('Position_Salaries.csv')
dataset=dataset[2,3]
#Fitting Linear Regression to dataset
lin_reg=lm(formula= Salary ~ . , data=dataset)
#Fitting Linear Regression to dataset
dataset$Level2=dataset$Level^2
dataset$Level2=dataset$Level^2
lin_reg=lm(formula= Salary ~ . , data=dataset)
dataset=dataset[2,3]
#Polynomial Regression
dataset=read.csv('Position_Salaries.csv')
dataset=dataset[2,3]
#Fitting Linear Regression to dataset
lin_reg=lm(formula= Salary ~ . , data=dataset)
#Fitting Linear Regression to dataset
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
lin_reg=lm(formula= Salary ~ . , data=dataset)
#Polynomial Regression
dataset=read.csv('Position_Salaries.csv')
dataset=dataset[2,3]
#Fitting Linear Regression to dataset
lin_reg=lm(formula= Salary ~ . , data=dataset)
#Fitting Linear Regression to dataset
dataset$Level2=dataset$Level^2
dataset$Level3=dataset$Level^3
lin_reg=lm(formula= Salary ~ . , data=dataset)
dataset=read.csv('Position_Salaries.csv')
dataset=dataset[2,3]
lin_reg=lm(formula= Salary ~ . , data=dataset)
lin_reg=lm(formula= Salary ~ . ,data=dataset)
lin_reg=lm(formula= Salary ~ Levels ,data=dataset)
lin_reg=lm(formula= Salary ~ . ,data=dataset)
lin_reg=lm(formula= Salary ~ . ,data = dataset)
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
lin_reg = lm(formula = Salary ~ .,
data = dataset)
View(dataset)
View(dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression)') +
xlab('Level') +
ylab('Salary')
# Visualising the Polynomial Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
predict(lin_reg, data.frame(Level = 6.5))
predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression)') +
xlab('Level') +
ylab('Salary')
#Multiple Linear Regression
dataset=read.csv('50_Startups.csv')
dataset$State=factor(dataset$State,
levels=c('New York','California','Florida'),
labels=c(1,2,3))
library(caTools)
set.seed(123)
split=sample.split(dataset$Profit,SplitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Fitting Multiple Linear Regression to training set
regressor=lm(formula= Profit ~ . , data=training_set)
#regressor=lm(formula= Profit ~ R.D.Spend , data=training_set)
#Predicting the test set result
Y_pred=predict(regressor,newdata=test_set)
setwd("C:/Users/HP/Desktop/ML Udemy/Machine Learning A-Z Practice/Part 2 - Regression/Section 5 - Multiple Linear Regression")
#Multiple Linear Regression
dataset=read.csv('50_Startups.csv')
dataset$State=factor(dataset$State,
levels=c('New York','California','Florida'),
labels=c(1,2,3))
library(caTools)
set.seed(123)
split=sample.split(dataset$Profit,SplitRatio=0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
#Fitting Multiple Linear Regression to training set
regressor=lm(formula= Profit ~ . , data=training_set)
#regressor=lm(formula= Profit ~ R.D.Spend , data=training_set)
#Predicting the test set result
Y_pred=predict(regressor,newdata=test_set)
View(dataset)
View(dataset)
View(lin_reg)
View(poly_reg)
View(regressor)
View(test_set)
View(training_set)
Y_pred
